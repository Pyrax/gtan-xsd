<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://gtanet.work/xml/resource"
           xmlns="http://gtanet.work/xml/resource"
           elementFormDefault="qualified">

  <!-- ========================================== -->
  <!-- Root element -->
  <!-- ========================================== -->
  <xs:element name="meta">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="metaElements" />
      </xs:choice>
    </xs:complexType>
  </xs:element>

  <!-- ========================================== -->
  <!-- Contains all elements available in resource meta files -->
  <!-- ========================================== -->
  <xs:group name="metaElements">
    <xs:choice>
      <xs:element name="info" type="infoElement" />
      <xs:element name="script" type="scriptElement" />
      <xs:element name="file" type="fileElement" />
      <xs:element name="assembly" type="assemblyElement" />
      <xs:element name="include" type="includeElement" />
      <xs:element name="map" type="mapElement" />
      <xs:element name="export" type="exportElement" />
      <xs:element name="acl" type="aclElement" />
      <xs:element name="config" type="configElement" />
      <xs:element name="settings" type="settingsElement" />
    </xs:choice>
  </xs:group>

  <!-- ========================================== -->
  <!-- Top level elements -->
  <!-- ========================================== -->
  <xs:complexType name="infoElement">
    <xs:attributeGroup ref="infoAttributes" />
  </xs:complexType>

  <xs:complexType name="scriptElement">
    <xs:attributeGroup ref="scriptAttributes" />
  </xs:complexType>

  <xs:complexType name="fileElement">
    <xs:attribute name="src" type="xs:anyURI" use="required" />
  </xs:complexType>

  <xs:complexType name="assemblyElement">
    <xs:attribute name="ref" type="xs:anyURI" use="required" />
  </xs:complexType>

  <xs:complexType name="includeElement">
    <xs:attribute name="resource" type="resourceList" use="required" />
  </xs:complexType>

  <xs:complexType name="mapElement">
    <xs:attributeGroup ref="mapAttributes" />
  </xs:complexType>

  <xs:complexType name="exportElement">
    <xs:attributeGroup ref="exportAttributes" />
  </xs:complexType>

  <xs:complexType name="aclElement">
    <xs:attribute name="src" type="xs:anyURI" use="required" />
  </xs:complexType>

  <xs:complexType name="configElement">
    <xs:attributeGroup ref="configAttributes" />
  </xs:complexType>

  <xs:complexType name="settingsElement">
    <xs:sequence maxOccurs="unbounded">
      <xs:element name="setting" type="settingElement" />
    </xs:sequence>
    <xs:attribute name="src" />
  </xs:complexType>

  <!-- ========================================== -->
  <!-- Specilization of top level elements -->
  <!-- ========================================== -->
  <xs:attributeGroup name="infoAttributes">
    <xs:attribute name="name" type="xs:string" />
    <xs:attribute name="description" type="xs:string" />
    <xs:attribute name="author" type="xs:string" />
    <xs:attribute name="version" type="xs:string" />
    <xs:attribute name="type" type="resourceType" />
    <xs:attribute name="gamemodes" type="resourceList" />
    <xs:attribute name="async" type="xs:boolean" />
    <xs:attribute name="shadowcopy" type="xs:boolean" />
  </xs:attributeGroup>

  <xs:attributeGroup name="scriptAttributes">
    <xs:attribute name="src" type="xs:anyURI" use="required" />
    <xs:attribute name="type" type="scriptType" use="required" />
    <xs:attribute name="lang" type="scriptLang" />
  </xs:attributeGroup>

  <xs:attributeGroup name="mapAttributes">
    <xs:attribute name="src" type="xs:anyURI" use="required" />
    <xs:attribute name="dimension" type="xs:nonNegativeInteger" />
  </xs:attributeGroup>

  <xs:attributeGroup name="exportAttributes">
    <xs:attribute name="class" type="validIdentifier" />
    <xs:attribute name="function" type="validIdentifier" />
    <xs:attribute name="event" type="validIdentifier" />
  </xs:attributeGroup>

  <xs:attributeGroup name="configAttributes">
    <xs:attribute name="src" type="xs:anyURI" use="required" />
    <xs:attribute name="type" type="scriptType" use="required" />
  </xs:attributeGroup>

  <!-- ========================================== -->
  <!-- Lower level elements -->
  <!-- ========================================== -->

  <xs:complexType name="settingElement">
    <xs:attributeGroup ref="settingAttributes" />
  </xs:complexType>

  <xs:attributeGroup name="settingAttributes">
    <xs:attribute name="name" type="xs:string" use="required" />
    <xs:attribute name="value" type="xs:string" />
    <xs:attribute name="default" type="xs:string" />
    <xs:attribute name="description" type="xs:string" />
  </xs:attributeGroup>

  <!-- ========================================== -->
  <!-- Specific types -->
  <!-- ========================================== -->
  <xs:simpleType name="resourceType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="script" />
      <xs:enumeration value="gamemode" />
      <xs:enumeration value="map" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="resourceList">
    <!-- comma separated list -->
    <xs:restriction base="xs:string">
      <xs:pattern value="(([a-zA-Z0-9])+(,([a-zA-Z0-9])+)*)" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="scriptType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="client" />
      <xs:enumeration value="server" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="scriptLang">
    <xs:restriction base="xs:string">
      <xs:enumeration value="javascript" />
      <xs:enumeration value="csharp" />
      <xs:enumeration value="vbasic" />
      <xs:enumeration value="compiled" />
    </xs:restriction>
  </xs:simpleType>

  <!-- Restrictions on identifiers name made by the programming language -->
  <xs:simpleType name="validIdentifier">
    <!-- must start with a character, an underscore or "@" and must not contain special characters other than underscore -->
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-zA-Z_@][a-zA-Z_0-9]*" />
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
